// SQLite-optimized schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(cuid())
  avatar           String?
  username         String             @unique
  email            String             @unique
  emailVerified    DateTime?
  twoFactorEnabled Boolean            @default(false)
  twoFactorSecret  String?
  password         String?
  role             String             @default("USER")
  createdAt        DateTime           @default(now())
  suspended        Boolean            @default(false)
  accounts         Account[]
  sessions         Session[]

  @@map("users")
}

model Session {
  id         String    @id @default(cuid())
  ip         String
  location   String
  userAgent  String    @map("user_agent")
  createdAt  DateTime  @default(now())
  lastActive DateTime?
  sessionToken String? @unique
  userId     String
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  username          String?
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model EmailVerificationToken {
  id      String   @id @default(cuid())
  email   String   @default("")
  userId  String?
  token   String   @unique
  expires DateTime

  @@unique([email, token])
  @@map("email_verification_tokens")
}

model PasswordResetToken {
  id      String   @id @default(cuid())
  email   String   @default("")
  token   String   @unique
  expires DateTime

  @@unique([email, token])
  @@map("password_reset_tokens")
}